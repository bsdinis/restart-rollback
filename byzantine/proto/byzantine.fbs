namespace register_sgx.byzantine;

enum MessageType:byte {
    client_greeting,

    proxy_get_req,
    proxy_get_resp,

    proxy_put_req,
    proxy_put_resp,

    get_req,
    get_resp,

    get_timestamp_req,
    get_timestamp_resp,

    put_req,
    put_resp,

    ping_req,
    ping_resp,

    reset_req,
    reset_resp,

    close_req,
}

struct DataValue {
    data: [ubyte:2048];
}


table Value {
    key: int64;
    data_value: DataValue;
    timestamp: int64;
}

table SignedValue {
    value: Value;
    signature: [ubyte];
}

table GetArgs {
    key : int64;
}

table GetResult {
    signed_value: SignedValue;
}

table GetTimestampArgs {
    key : int64;
}

table GetTimestampResult {
    signed_value: SignedValue;
}

table ProxyPutArgs {
    key: int64;
    client_id: int32;
    data_value: DataValue;
}

table PutArgs {
    signed_value: SignedValue;
}

table PutResult {
    success : bool;
    timestamp: int64;
}

table Greeting {
    id: int32;
}

table Empty { }

union BasicMessage {
    Greeting,
    GetArgs,
    GetResult,
    GetTimestampArgs,
    GetTimestampResult,
    ProxyPutArgs,
    PutArgs,
    PutResult,
    Empty,
}

table Message {
    type    : MessageType;
    ticket  : int64;
    message : BasicMessage;
}

root_type Message;
